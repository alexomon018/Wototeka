[{"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\index.js":"1","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\App.js":"2","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\reportWebVitals.js":"3","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\context.js":"4","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\useFetch.js":"5","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\components\\Navbar\\Navbar.js":"6","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\components\\Search\\Search.js":"7","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\components\\Loader\\Loader.js":"8","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\components\\Card\\Card.js":"9","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\pages\\Home\\Home.js":"10","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\pages\\Login\\Login.js":"11","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\reducer.js":"12","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\constants.js":"13","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\components\\TableTanks\\TableTanks.js":"14","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\components\\Card\\CustomTableRow\\CustomTableRow.js":"15","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\components\\EnhancedTable\\EnhancedTable.js":"16"},{"size":572,"mtime":1611502618889,"results":"17","hashOfConfig":"18"},{"size":488,"mtime":1611569764888,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610747099868,"results":"20","hashOfConfig":"18"},{"size":720,"mtime":1612465428845,"results":"21","hashOfConfig":"18"},{"size":3145,"mtime":1612198806934,"results":"22","hashOfConfig":"18"},{"size":2067,"mtime":1610750738223,"results":"23","hashOfConfig":"18"},{"size":1793,"mtime":1612110220776,"results":"24","hashOfConfig":"18"},{"size":143,"mtime":1611491968296,"results":"25","hashOfConfig":"18"},{"size":3538,"mtime":1612225649760,"results":"26","hashOfConfig":"18"},{"size":713,"mtime":1612631082459,"results":"27","hashOfConfig":"18"},{"size":578,"mtime":1611570519275,"results":"28","hashOfConfig":"18"},{"size":2414,"mtime":1612113755121,"results":"29","hashOfConfig":"18"},{"size":1044,"mtime":1612102111407,"results":"30","hashOfConfig":"18"},{"size":4363,"mtime":1612302544822,"results":"31","hashOfConfig":"18"},{"size":385,"mtime":1612225109560,"results":"32","hashOfConfig":"18"},{"size":11128,"mtime":1612480661710,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ch18ep",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\index.js",[],["71","72"],"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\App.js",[],"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\reportWebVitals.js",[],"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\context.js",[],"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\useFetch.js",["73","74","75","76"],"import { useEffect, useReducer } from 'react'\r\nimport reducer from './reducer'\r\nimport {\r\n  MAKE_REQUEST_PLAYER_INFO,\r\n  GET_PLAYER_INFO,\r\n  ERROR_PLAYER_INFO,\r\n  MAKE_REQUEST_PLAYER_VEHICLES,\r\n  GET_PLAYER_VEHICLES,\r\n  ERROR_PLAYER_VEHICLES,\r\n  MAKE_REQUEST_PLAYER_VEHICLES_STATS,\r\n  GET_PLAYER_VEHICLES_STATS,\r\n  ERROR_PLAYER_VEHICLES_STATS,\r\n  MAKE_REQUEST_ALL_VEHICLES,\r\n  GET_ALL_VEHICLES,\r\n  ERROR_ALL_VEHICLES,\r\n} from './constants'\r\nconst API_ID = `https://api.worldoftanks.eu/wot/account/info/?application_id=${process.env.REACT_APP_APP_ID}&account_id=`\r\nconst PLAYER_NAME = `https://api.worldoftanks.eu/wot/account/list/?application_id=${process.env.REACT_APP_APP_ID}&type=exact&search=`\r\nconst PLAYER_VEHICLES = `https://api.worldoftanks.eu/wot/account/tanks/?application_id=${process.env.REACT_APP_APP_ID}&account_id=`\r\nconst ALL_VEHICLES = `https://api.worldoftanks.eu/wot/encyclopedia/vehicles/?application_id=${process.env.REACT_APP_APP_ID}&tank_id=`\r\nconst PLAYER_VEHICLE_STATISTIC = `https://api.worldoftanks.eu/wot/tanks/stats/?application_id=${process.env.REACT_APP_APP_ID}&account_id=`\r\nconst useFetch = (urlParams) => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    playerInfo: [],\r\n    playerVehicles: [],\r\n    playerVehiclesStats: [],\r\n    allVehicles: [],\r\n    loading: true,\r\n    loadingVehicles: true,\r\n  })\r\n  const getPlayerData = async () => {\r\n    try {\r\n      dispatch({ type: MAKE_REQUEST_PLAYER_INFO })\r\n      const playerId = await fetch(`${PLAYER_NAME}${urlParams}`).then((res) =>\r\n        res.json()\r\n      )\r\n      const playerInfo = await fetch(\r\n        `${API_ID}${playerId.data[0].account_id}`\r\n      ).then((res) => res.json())\r\n      dispatch({\r\n        type: GET_PLAYER_INFO,\r\n        payload: { playerInfo: playerInfo.data[playerId.data[0].account_id] },\r\n      })\r\n      dispatch({ type: MAKE_REQUEST_PLAYER_VEHICLES })\r\n      const playerVehicles = await fetch(\r\n        `${PLAYER_VEHICLES}${playerId.data[0].account_id}`\r\n      ).then((res) => res.json())\r\n      dispatch({\r\n        type: GET_PLAYER_VEHICLES,\r\n        payload: {\r\n          playerVehicles: playerVehicles.data[playerId.data[0].account_id],\r\n        },\r\n      })\r\n      dispatch({ type: MAKE_REQUEST_PLAYER_VEHICLES_STATS })\r\n      const playerVehiclesStats = await fetch(\r\n        `${PLAYER_VEHICLE_STATISTIC}${playerId.data[0].account_id}`\r\n      ).then((res) => res.json())\r\n      dispatch({\r\n        type: GET_PLAYER_VEHICLES_STATS,\r\n        payload: {\r\n          playerVehiclesStats:\r\n            playerVehiclesStats.data[playerId.data[0].account_id],\r\n        },\r\n      })\r\n      dispatch({ type: MAKE_REQUEST_ALL_VEHICLES })\r\n      const allVehicles = await fetch(`${ALL_VEHICLES}`).then((res) =>\r\n        res.json()\r\n      )\r\n      console.log(allVehicles)\r\n      dispatch({\r\n        type: GET_ALL_VEHICLES,\r\n        payload: {\r\n          allVehicles: allVehicles.data,\r\n        },\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: ERROR_PLAYER_INFO, payload: { error } })\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getPlayerData()\r\n  }, [urlParams])\r\n\r\n  return {\r\n    state,\r\n  }\r\n}\r\nexport default useFetch\r\n","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\components\\Search\\Search.js",[],"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\components\\Loader\\Loader.js",[],"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\components\\Card\\Card.js",[],"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\pages\\Home\\Home.js",[],"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\pages\\Login\\Login.js",["77","78","79"],"import React from 'react'\r\nimport './Login.css'\r\nimport { ImEnter } from 'react-icons/im'\r\nfunction Login() {\r\n  return (\r\n    <div className='login__container'>\r\n      <h1>Login with wargaming account</h1>\r\n      <p>Please select your server</p>\r\n      <div className='server__wrapper'>\r\n        <a href=''>\r\n          <ImEnter />\r\n          EU Server{' '}\r\n        </a>\r\n        <a href=''>\r\n          <ImEnter />\r\n          NA Server\r\n        </a>\r\n        <a href=''>\r\n          <ImEnter /> Ru Server\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\reducer.js",[],"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\constants.js",[],"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\components\\TableTanks\\TableTanks.js",[],["80","81"],"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\components\\Card\\CustomTableRow\\CustomTableRow.js",[],"C:\\Users\\aleks\\Desktop\\JS\\Clones\\wototeka\\src\\components\\EnhancedTable\\EnhancedTable.js",["82","83","84","85","86","87","88","89"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport './EnhancedTable.css'\r\nimport { useGlobalContext } from '../../context'\r\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Switch from '@material-ui/core/Switch'\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy)\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index])\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0])\r\n    if (order !== 0) return order\r\n    return a[1] - b[1]\r\n  })\r\n  return stabilizedThis.map((el) => el[0])\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'tankName',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Tank Name',\r\n  },\r\n  { id: 'mastery', numeric: true, disablePadding: false, label: 'M' },\r\n  { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\r\n  { id: 'nation', numeric: false, disablePadding: false, label: 'Nation' },\r\n  { id: 'tier', numeric: true, disablePadding: false, label: 'Tier' },\r\n  {\r\n    id: 'averageDamage',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Average Damage',\r\n  },\r\n  {\r\n    id: 'averageXp',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Average Xp',\r\n  },\r\n  { id: 'battles', numeric: true, disablePadding: false, label: 'Battles' },\r\n  {\r\n    id: 'victories',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Victories %',\r\n  },\r\n  { id: 'maxKills', numeric: true, disablePadding: false, label: 'Max Kills' },\r\n  { id: 'maxXp', numeric: true, disablePadding: false, label: 'Max Xp' },\r\n]\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell)\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property)\r\n  }\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding='checkbox'></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}))\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles()\r\n  const { numSelected } = props\r\n\r\n  return (\r\n    <Toolbar>\r\n      <Typography\r\n        className={classes.title}\r\n        variant='h6'\r\n        id='tableTitle'\r\n        component='div'\r\n      >\r\n        Total Tanks : {numSelected}\r\n      </Typography>\r\n    </Toolbar>\r\n  )\r\n}\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}))\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles()\r\n  const [order, setOrder] = React.useState('desc')\r\n  const [orderBy, setOrderBy] = React.useState('tankName')\r\n  const [selected, setSelected] = React.useState([])\r\n  const [page, setPage] = React.useState(0)\r\n  const [dense, setDense] = React.useState(false)\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5)\r\n  const {\r\n    state: { playerVehiclesStats, allVehicles },\r\n  } = useGlobalContext()\r\n  const createData = (\r\n    tankName,\r\n    m,\r\n    type,\r\n    nation,\r\n    tier,\r\n    averageDamage,\r\n    averageXp,\r\n    battles,\r\n    victories,\r\n    maxKills,\r\n    maxXp\r\n  ) => {\r\n    return {\r\n      tankName,\r\n      m,\r\n      type,\r\n      nation,\r\n      tier,\r\n      averageDamage,\r\n      averageXp,\r\n      battles,\r\n      victories,\r\n      maxKills,\r\n      maxXp,\r\n    }\r\n  }\r\n\r\n  const stats = playerVehiclesStats.map((singleVehicle) => {\r\n    return singleVehicle\r\n  })\r\n  const rows = stats.map((stat) => {\r\n    return createData(\r\n      allVehicles[stat.tank_id].name,\r\n      stat.mark_of_mastery,\r\n      allVehicles[stat.tank_id].type,\r\n      allVehicles[stat.tank_id].nation,\r\n      allVehicles[stat.tank_id].tier,\r\n      Math.round(stat.all.damage_dealt / stat.all.battles),\r\n      Math.round(stat.all.xp / stat.all.battles),\r\n      stat.all.battles,\r\n      Math.round((stat.all.wins / stat.all.battles) * 100),\r\n      stat.max_frags,\r\n      stat.max_xp\r\n    )\r\n  })\r\n\r\n  console.log(rows)\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc'\r\n    setOrder(isAsc ? 'desc' : 'asc')\r\n    setOrderBy(property)\r\n  }\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name)\r\n      setSelected(newSelecteds)\r\n      return\r\n    }\r\n    setSelected([])\r\n  }\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked)\r\n  }\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage)\r\n\r\n  return (\r\n    <div className='enhancedTable__container'>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <EnhancedTableToolbar numSelected={rows.length} />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby='tableTitle'\r\n              size={dense ? 'small' : 'medium'}\r\n              aria-label='enhanced table'\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(rows, getComparator(order, orderBy)).map(\r\n                  (row, index) => {\r\n                    const isItemSelected = isSelected(row.tankName)\r\n                    const labelId = `enhanced-table-checkbox-${index}`\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={`${row.tankName}${row.battles}`}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding='checkbox'></TableCell>\r\n                        <TableCell\r\n                          component='th'\r\n                          id={labelId}\r\n                          scope='row'\r\n                          padding='none'\r\n                        >\r\n                          {row.tankName}\r\n                        </TableCell>\r\n                        <TableCell align='right'> {row.m}</TableCell>\r\n                        <TableCell align='right'> {row.type}</TableCell>\r\n                        <TableCell align='right'> {row.nation}</TableCell>\r\n                        <TableCell align='right'> {row.tier}</TableCell>\r\n                        <TableCell align='right'>\r\n                          {' '}\r\n                          {row.averageDamage}\r\n                        </TableCell>\r\n                        <TableCell align='right'>{row.averageXp}</TableCell>\r\n                        <TableCell align='right'>{row.battles}</TableCell>\r\n                        <TableCell align='right'>{row.victories}</TableCell>\r\n                        <TableCell align='right'>{row.maxKills}</TableCell>\r\n                        <TableCell align='right'>{row.maxXp}</TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  }\r\n                )}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n        <FormControlLabel\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label='Dense padding'\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":9,"column":3,"nodeType":"96","messageId":"97","endLine":9,"endColumn":24},{"ruleId":"94","severity":1,"message":"98","line":12,"column":3,"nodeType":"96","messageId":"97","endLine":12,"endColumn":30},{"ruleId":"94","severity":1,"message":"99","line":15,"column":3,"nodeType":"96","messageId":"97","endLine":15,"endColumn":21},{"ruleId":"100","severity":1,"message":"101","line":82,"column":6,"nodeType":"102","endLine":82,"endColumn":17,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":10,"column":9,"nodeType":"106","endLine":10,"endColumn":20},{"ruleId":"104","severity":1,"message":"105","line":14,"column":9,"nodeType":"106","endLine":14,"endColumn":20},{"ruleId":"104","severity":1,"message":"105","line":18,"column":9,"nodeType":"106","endLine":18,"endColumn":20},{"ruleId":"90","replacedBy":"107"},{"ruleId":"92","replacedBy":"108"},{"ruleId":"94","severity":1,"message":"109","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":12},{"ruleId":"94","severity":1,"message":"110","line":12,"column":8,"nodeType":"96","messageId":"97","endLine":12,"endColumn":23},{"ruleId":"94","severity":1,"message":"111","line":80,"column":7,"nodeType":"96","messageId":"97","endLine":80,"endColumn":22},{"ruleId":"94","severity":1,"message":"112","line":93,"column":5,"nodeType":"96","messageId":"97","endLine":93,"endColumn":21},{"ruleId":"94","severity":1,"message":"113","line":96,"column":5,"nodeType":"96","messageId":"97","endLine":96,"endColumn":16},{"ruleId":"94","severity":1,"message":"114","line":97,"column":5,"nodeType":"96","messageId":"97","endLine":97,"endColumn":13},{"ruleId":"94","severity":1,"message":"115","line":215,"column":16,"nodeType":"96","messageId":"97","endLine":215,"endColumn":23},{"ruleId":"94","severity":1,"message":"116","line":217,"column":23,"nodeType":"96","messageId":"97","endLine":217,"endColumn":37},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'ERROR_PLAYER_VEHICLES' is defined but never used.","Identifier","unusedVar","'ERROR_PLAYER_VEHICLES_STATS' is defined but never used.","'ERROR_ALL_VEHICLES' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPlayerData'. Either include it or remove the dependency array.","ArrayExpression",["119"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["117"],["118"],"'clsx' is defined but never used.","'TablePagination' is defined but never used.","'StyledTableCell' is assigned a value but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'setPage' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [getPlayerData, urlParams]",{"range":"122","text":"123"},[3072,3083],"[getPlayerData, urlParams]"]